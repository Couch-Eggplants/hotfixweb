{"version":3,"sources":["panels/Home.js","panels/Place.js","panels/Checkbox.js","panels/Basket.js","panels/Order.js","panels/Orders.js","App.js","index.js","img/edit.svg","img/1.png","img/3.png","img/2.png","img/4.png","img/check-symbol.svg","img/refresh-button.svg","img/kfc.png","img/burger.png","img/mcdac.png","img/sub.png"],"names":["Home","foodAreas","order","Fragment","className","map","area","key","id","to","name","alt","src","edit","items","item","link","image","description","Object","keys","length","defaultProps","Place","onIncrementPosition","onDecrementPosition","price","useMemo","foodIds","Set","foods","result","values","filter","value","has","reduce","count","parseInt","accounting","formatNumber","food","composition","onClick","itemId","areaId","Checkbox","checked","onToggle","onChange","type","Check","withRouter","match","params","useState","faster","setFaster","time","setTime","selfService","setSelfService","validTime","setValidTime","updateTempOrder","k","v","localStorage","getItem","setItem","arr","JSON","parse","stringify","products","onLoad","tempOrder","ttime","tselfService","tfaster","onFocus","event","re","RegExp","test","target","onBlur","Order","history","setActiveOrder","removeItem","setTimeout","push","Orders","orderStatuses","setFinishedOrder","setCanceledOrder","activeOrders","activeOrdersList","shopId","activeOrdersSet","forEach","data","placeId","placeName","shopName","finishedOrders","refresh","FOOD_AREAS","kfc","FourTowar","OneTowar","burger","TwoTowar","ThreeTowar","mcdac","sub","placesMap","foodsMap","App","setOrderStatuses","setOrder","path","exact","nextStatuses","render","routeProps","location","pathname","updatedOrder","nextOrderStatuses","status","serialized","connect","send","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e4d2859b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './Home.css';\n\nconst Home = ({ foodAreas, order }) => (\n  <React.Fragment>\n    <ul className=\"Home\">\n      {foodAreas.map((area) => (\n        <li\n          key={area.id}\n        >\n          <div className=\"Home__fixed-content\">\n            <header className=\"Home__header\">\n              <h1 className=\"Home__head\">\n                <Link to=\"/\" className=\"Home__logo\">\n                  {area.name}\n                </Link>\n              </h1>\n              <Link to=\"/\" className=\"Home__change-tz\">\n                <img\n                  className=\"Home__edit\"\n                  alt=\"change-profile\"\n                  src={edit}\n                />\n              </Link>\n            </header>\n            <ul className=\"Home__tabs\">\n              <li className=\"Home__tab Home__tab_active\">\n                Еда\n              </li>\n              {/* <li className=\"Home__tab Home__tab_disabled\">\n                Развлечения\n              </li>\n              <li className=\"Home__tab Home__tab_disabled\">\n                Здоровье\n              </li> */}\n            </ul>\n          </div>\n          <ul className=\"Home__items\">\n            {area.items.map(item => (\n              <li\n                className=\"Home__item\"\n                key={item.id}\n              >\n                <Link\n                  className=\"Home__food-link\"\n                  to={item.link}\n                >\n                  <img\n                    alt={item.name}\n                    className=\"Home__image\"\n                    src={item.image}\n                  />\n                  <h3 className=\"Home__food-name\">\n                    {item.name}\n                  </h3>\n                  <p className=\"Home__food-type\">{item.description}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n    {Object.keys(order).length !== 0 && (\n      <footer className=\"Footer\">\n        <Link to=\"/orders\" className=\"Footer__orders\">\n\t\t\t\t\tМои заказы\n        </Link>\n      </footer>\n    )}\n  </React.Fragment>\n);\n\nHome.propTypes = {\n  foodAreas: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n    })),\n  })),\n};\n\nHome.defaultProps = {\n  foodAreas: [],\n};\n\nexport default Home;\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport accounting from 'accounting';\n// import PropTypes from 'prop-types';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Place = ({ item, order, onIncrementPosition, onDecrementPosition, area }) => {\n  const price = useMemo(() => {\n    const foodIds = new Set((item.foods || []).map(item => item.id));\n\n    const result = Object.values(order)\n      .filter((value) => {\n        const { item: { id }} = value;\n\n        return foodIds.has(id);\n      })\n      .reduce((result, value) => {\n        const { count, item: { price }} = value;\n\n        return result + parseInt(price) * parseInt(count);\n      }, 0);\n\n    return accounting.formatNumber(result, 0, ' ');\n  }, [ order, item ]);\n\n  return (\n    <div className=\"Place\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n          <img\n            alt=\"change-profile\"\n            src={edit}\n          />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <ul className=\"Place__foods\">\n        {item.foods.map((food => (\n          <li\n            className=\"Place__food\"\n            key={food.id}\n          >\n            <div className=\"Place__food-logo-wrapper\">\n              <img\n                alt=\"food logo\"\n                className=\"Place__food-logo\"\n                src={food.image}\n              />\n            </div>\n            <h3 className=\"Place__food-name\">\n              {food.name}\n            </h3>\n            <p className=\"Place__food-composition\">\n              {food.composition}\n            </p>\n            <div className=\"Place__food-price\">\n              <span className=\".Place__food-price-price\">Цена: {food.price}&nbsp;&nbsp;</span>\n              <button\n                className=\"Place__food-button\"\n                onClick={() => {\n                  onDecrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\n                }}\n              >\n                -\n              </button>\n              <span>&nbsp;{food.id in order ? order[food.id].count : 0}&nbsp;</span>\n              <button\n                className=\"Place__food-button\"\n                onClick={() => {\n                  onIncrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\n                }}\n              >\n                +\n              </button>\n            </div>\n          </li>\n        )))}\n      </ul>\n      <footer className=\"Place__footer\">\n        <Link to={price > 0 ? `/basket/${area.id}/${item.id}` : '#'} className=\"Place__order\">\n          Оформить заказ ({price})\n        </Link>\n      </footer>\n    </div>\n  );\n};\n\nPlace.defaultProps = {\n  item: {},\n  onIncrementPosition: () => {},\n  onDecrementPosition: () => {},\n};\n\nexport default Place;\n","import React from 'react';\n\nimport './Checkbox.css';\nimport Check from '../img/check-symbol.svg';\n\n\nconst Checkbox = ({ checked, onToggle }) => {\n  return (\n    <div className=\"Checkbox\">\n      <input\n        checked={checked}\n        onChange={onToggle}\n        type=\"checkbox\"\n      />\n      <img\n        alt=\"custom checkbox logo\"\n        src={Check}\n      />\n    </div>\n  );\n};\n\nCheckbox.defaultProps = {\n  onToggle: () => {},\n};\n\nexport default Checkbox;\n","import React, { useMemo, useState } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport accounting from 'accounting';\n\nimport Checkbox from './Checkbox';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Basket = ({ match: { params: { areaId, itemId }}, foodAreas, order }) => {\n  const [ faster, setFaster ] = useState(true);\n  const [ time, setTime ] = useState('');\n  const [ selfService, setSelfService ] = useState(false);\n  const [ validTime, setValidTime ] = useState(true);\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n\n  function updateTempOrder(k, v) {\n    if (!localStorage.getItem(\"tempOrder\")) {\n      localStorage.setItem(\"tempOrder\", \"{}\");\n    }\n    var arr = JSON.parse(localStorage.getItem(\"tempOrder\"));\n    arr[k] = v;\n    localStorage.setItem(\"tempOrder\", JSON.stringify(arr));\n  }\n\n  function getTempOrder(k) {\n    if (!localStorage.getItem(\"tempOrder\")) {\n      return \"\";\n    }\n    var arr = JSON.parse(localStorage.getItem(\"tempOrder\"));\n    return arr[k];\n  }\n\n\n  const [ price, products ] = useMemo(() => {\n    const foodIds = new Set((item.foods || []).map(item => item.id));\n\n    const products = Object.values(order)\n      .filter((value) => {\n        const { item: { id }} = value;\n\n        return foodIds.has(id);\n      });\n\n    const result = products.reduce((result, value) => {\n        const { count, item } = value;\n\n        return result + parseInt(item.price) * parseInt(count);\n      }, 0);\n\n    return [ accounting.formatNumber(result, 0, ' '), products ];\n  }, [ order, item ]);\n\n\n  return (\n    <div className=\"Place\" onLoad={() => {\n      var tempOrder = JSON.parse(localStorage.getItem(\"tempOrder\"));\n      if (tempOrder) {\n        var ttime = tempOrder['time'] ? tempOrder['time'] : \"\";\n        var tselfService = tempOrder['selfService'] ? tempOrder[\"selfService\"] : false;\n        var tfaster = tempOrder['faster'] ? tempOrder['faster'] : true;\n        setFaster(tfaster == \"true\" ? true : false);\n        setSelfService(tselfService);\n        if (faster) {\n          setTime(ttime);\n        }\n      }\n    }}>\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__products-wrapper\">\n        <ul className=\"Place__products\">\n          {products.map(({ item, count }) => (\n            <li\n              className=\"Place__product\"\n              key={item.id}\n            >\n              <img\n                className=\"Place__product-logo\"\n                alt=\"Ordered product logo\"\n                src={item.image}\n              />\n              <h3\n                className=\"Place__product-name\"\n              >\n                {item.name}\n              </h3>\n              <p\n                className=\"Place__product-price\"\n              >\n                Цена: {item.price}\n              </p>\n              <p\n                className=\"Place__product-count\"\n              >\n                x{count}\n              </p>\n            </li>\n          ))}\n        </ul>\n        <Link\n          className=\"Place__change-product\"\n          to={`/place/${areaId}/${itemId}`}\n        >\n          Изменить\n        </Link>\n      </div>\n      <div className=\"Place__choice\">\n        <h3>Время:</h3>\n        <div className=\"Place__choice-item\">\n          <span>Как можно быстрее</span>\n          <Checkbox\n            checked={faster}\n            onToggle={() => {\n              if (faster) {\n                setFaster(false);\n                updateTempOrder(\"faster\", \"false\");\n              } else {\n                setTime('');\n                setFaster(true);\n                updateTempOrder(\"time\", \"\");\n                updateTempOrder(\"faster\", \"true\");\n              }\n            }}\n          />\n        </div>\n        <div className=\"Place__choice-item\">\n          <span>Назначить</span>\n          <input\n            value={time}\n            onFocus={() => {\n              setFaster(false);\n              updateTempOrder(\"faster\", \"false\");\n            }}\n            onChange={event => {\n              setFaster(false);\n\n              var re = new RegExp(\"^([0-1][0-9]|2[0-3]):([0-5][0-9])$\");\n              setValidTime(re.test(event.target.value))\n              setTime(event.target.value);\n              updateTempOrder(\"time\", event.target.value);\n              //localStorage.setItem\n            }}\n            onBlur={() => {\n              setTime(getTempOrder(\"time\"));\n              if (time) {\n                setFaster(false);\n              }\n            }}\n          />\n        </div>\n        <div className=\"Place__choice-item\">\n          <h3>С собой</h3>\n          <Checkbox checked={selfService} onToggle={() => {\n            setSelfService(!selfService);\n            updateTempOrder(\"selfService\", !selfService);\n          }} />\n        </div>\n        <div className=\"Place__choice-item\">\n          <h3>На месте</h3>\n          <Checkbox checked={!selfService} onToggle={() => {\n            setSelfService(!setSelfService);\n            updateTempOrder(\"selfService\", !selfService);\n          }} />\n        </div>\n      </div>\n      <footer className=\"Place__footer\">\n        <Link to={validTime ? `/order/${area.id}/${item.id}` : '#'} className=\"Place__order\">\n          Оплатить {price}\n        </Link>\n      </footer>\n    </div>\n  );\n};\n\nexport default withRouter(Basket);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Order = ({ match: { params: { areaId, itemId }}, history, foodAreas, setActiveOrder }) => {\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n  localStorage.removeItem(\"tempOrder\");\n\n  return (\n    <div className=\"Place Place_order\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__order-body\">\n        <h3 className=\"Place__order-number-header\">\n          Номер вашего заказа\n        </h3>\n        <main className=\"Place__order-number\">\n          7\n        </main>\n        <p className=\"Place__order-number-header\">\n          Заказ будет готов через\n        </p>\n        <h3 className=\"Place__order-time\">\n          ~ 15 минут\n        </h3>\n      </div>\n      <footer className=\"Place__footer\">\n        <div\n          to=\"/orders\"\n          className=\"Place__order\"\n          onClick={() => {\n            setActiveOrder({ itemId });\n\n            setTimeout(() => {\n              history.push('/orders');\n            }, 0);\n          }}\n        >\n          Мои заказы\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nOrder.defaultProps = {\n  setActiveOrder: () => {},\n};\n\nexport default withRouter(Order);\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport refresh from '../img/refresh-button.svg';\nimport './orders.css';\n\n\nconst Orders = ({ order, orderStatuses, foodAreas, setFinishedOrder, setActiveOrder, setCanceledOrder }) => {\n  const activeOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeId: area.id,\n            placeName: area.name,\n            shopId: item.id,\n            shopName: item.name,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  const finishedOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] !== 'ACTIVE' && orderStatuses[shopId] !== 'CANCELED')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeName: area.name,\n            shopName: item.name,\n            shopId: item.id,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  return (\n    <div className=\"Orders\">\n      <ul className=\"Orders__active-orders\">\n        {activeOrders.map(order => (\n          <li\n            className=\"Orders__active-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name\">{order.shopName}</p>\n              <p className=\"Orders__price\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <div className=\"Orders__time\">\n              ~ 15 М\n            </div>\n            <Link\n              className=\"Orders__change\"\n              to={`/place/${order.placeId}/${order.shopId}`}\n            >\n              Изм\n            </Link>\n            <button\n              className=\"Orders__cancel\"\n              onClick={() => {\n                setCanceledOrder({ itemId: order.shopId });\n              }}\n            >\n              Отм.\n            </button>\n          </li>\n        ))}\n      </ul>\n      <ul className=\"Orders__finished-orders\">\n        {finishedOrders.map(order => (\n          <li\n            className=\"Orders__finished-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header Orders__dark\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name Orders__pink\">{order.shopName}</p>\n              <p className=\"Orders__price Orders__pink\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <button\n              className=\"Orders__repeat\"\n              onClick={() => {\n                setActiveOrder({ itemId: order.shopId });\n              }}\n            >\n              <img\n                className=\"Orders__refresh\"\n                alt=\"repeat order\"\n                src={refresh}\n              />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nOrders.defaultProps = {\n  setFinishedOrder: () => {},\n  setActiveOrder: () => {},\n};\n\nexport default Orders;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './panels/Home';\nimport Place from './panels/Place';\nimport Basket from './panels/Basket';\nimport Order from './panels/Order';\nimport Orders from './panels/Orders';\n\nimport './panels/App.css';\nimport kfc from './img/kfc.png';\nimport burger from './img/burger.png';\nimport mcdac from './img/mcdac.png';\nimport sub from './img/sub.png';\nimport OneTowar from './img/1.png';\nimport TwoTowar from './img/2.png';\nimport ThreeTowar from './img/3.png';\nimport FourTowar from './img/4.png';\n\n\nconst FOOD_AREAS = [{\n  id: 'pizikiva-gallery',\n  name: 'ТРЦ \"Им.Пыжикова\"',\n  items: [{\n    id: 'kfc',\n    name: 'KFC',\n    link: '/place/pizikiva-gallery/kfc',\n    description: 'Сеть ресторанов быстрого питания',\n    image: kfc,\n    foods: [{\n      id: 'classic',\n      image: FourTowar,\n      name: 'Классик',\n      price: 150,\n    }, {\n      id: 'chips',\n      image: OneTowar,\n      name: 'Картофель фри',\n      price: 50,\n    }],\n  }, {\n    id: 'burger-king',\n    name: 'Burger King',\n    link: '/place/pizikiva-gallery/burger-king',\n    description: 'Сеть ресторанов быстрого питания',\n    image: burger,\n    foods: [{\n      id: 'OneTowar',\n      name: 'Товар № 1',\n      composition: 'Состав: по ГОСТу',\n      price: 630,\n      image: OneTowar,\n    }, {\n      id: 'TwoTowar',\n      name: 'Товар № 2',\n      composition: 'Состав: по ГОСТу',\n      price: 450,\n      image: TwoTowar,\n    }, {\n      id: 'ThreeTowar',\n      name: 'Товар № 3',\n      composition: 'Состав: по ГОСТу',\n      price: 800,\n      image: ThreeTowar,\n    }, {\n      id: 'FourthTowar',\n      name: 'Товар № 4',\n      composition: 'Состав по ГОСТу',\n      price: 600,\n      image: FourTowar,\n    }],\n  }, {\n    id: 'macdac',\n    name: 'McDonal\\'s',\n    link: '/place/pizikiva-gallery/macdac',\n    description: 'Сеть ресторанов быстрого питания',\n    image: mcdac,\n    foods: [{\n      id: 'hamburger',\n      image: TwoTowar,\n      name: 'Гамбургер',\n      price: 50,\n    }, {\n      id: 'bigmac',\n      image: ThreeTowar,\n      name: 'Биг мак',\n      price: 200,\n    }],\n  }, {\n    id: 'subway',\n    name: 'SubWay',\n    link: '/place/pizikiva-gallery/subway',\n    image: sub,\n    description: 'Сеть ресторанов быстрого питания',\n    foods: [{\n      id: 'melt-sub',\n      image: ThreeTowar,\n      name: 'Сабвей мелт',\n      price: 300,\n    }, {\n      id: 'day-sub',\n      image: OneTowar,\n      name: 'Саб дня',\n      price: 200,\n    }],\n  }],\n}];\n\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n  area.items.forEach(item => {\n    result[item.link] = item;\n  });\n\n  return result;\n}, {});\n\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n  area.items.forEach(item => {\n    item.foods.forEach(food => {\n      result[food.id] = food;\n    });\n  });\n\n  return result;\n}, {});\n\nconst App = () => {\n  const [ orderStatuses, setOrderStatuses ] = useState(JSON.parse((localStorage.getItem('orderStatuses') || 'null')) || {});\n  const [ order, setOrder ] = useState(JSON.parse((localStorage.getItem('orders') || 'null')) || {});\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home foodAreas={FOOD_AREAS} order={order} />\n        </Route>\n        <Route path=\"/order/:areaId/:itemId\" exact>\n          <Order\n            foodAreas={FOOD_AREAS}\n            order={order}\n            setActiveOrder={({ itemId }) => {\n              const nextStatuses = {...orderStatuses};\n\n              nextStatuses[itemId] = 'ACTIVE';\n\n              setOrderStatuses(nextStatuses);\n              localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n            }}\n          />\n        </Route>\n        <Route path=\"/basket/:areaId/:itemId\" exact>\n          <Basket\n            foodAreas={FOOD_AREAS}\n            order={order}\n          />\n        </Route>\n        <Route\n          path=\"/orders\"\n          exact\n        >\n          <Orders\n            order={order}\n            orderStatuses={orderStatuses}\n            foodAreas={FOOD_AREAS}\n            setFinishedOrder={({ itemId }) => {\n              const nextStatuses = {...orderStatuses};\n\n              nextStatuses[itemId] = 'DONE';\n\n              setOrderStatuses(nextStatuses);\n              localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n            }}\n\t\t\t\t\t\tsetCanceledOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n              nextStatuses[itemId] = 'CANCELED';\n\n              setOrderStatuses(nextStatuses);\n              localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n            setActiveOrder={({ itemId }) => {\n              const nextStatuses = {...orderStatuses};\n\n              nextStatuses[itemId] = 'ACTIVE';\n\n              setOrderStatuses(nextStatuses);\n              localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n            }}\n          />\n        </Route>\n        <Route\n          path=\"/place/:area/:place\"\n          render={routeProps => {\n            return (\n              <Place\n                {...routeProps}\n                item={placesMap[routeProps.location.pathname]}\n                area={FOOD_AREAS[0]}\n                order={order}\n                onIncrementPosition={({ id, itemId, areaId }) => {\n                  const updatedOrder = {...order};\n\n                  if (id in updatedOrder) {\n                    updatedOrder[id].count++;\n                  } else {\n                    updatedOrder[id] = {\n                      item: foodsMap[id],\n                      count: 1,\n                    };\n                  }\n\n                  let nextOrderStatuses = {...orderStatuses};\n\n                  if (Object.keys(nextOrderStatuses).length === 0) {\n                    FOOD_AREAS.forEach(area => {\n                      area.items.forEach(item => {\n                        item.foods.forEach(food => {\n                          if (food.id in order) {\n                            const status = item.id === itemId ? 'ACTIVE' : 'CANCELED';\n\n                            nextOrderStatuses[item.id] = status;\n                          }\n                        });\n                      });\n                    });\n                  }\n\n                  const serialized = JSON.stringify(updatedOrder);\n\n                  localStorage.setItem('orders', serialized);\n                  localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n                  setOrder(updatedOrder);\n                  setOrderStatuses(nextOrderStatuses);\n                }}\n                onDecrementPosition={({ id, itemId, areaId }) => {\n                  const updatedOrder = {...order};\n\n                  if (id in updatedOrder) {\n                    if (updatedOrder[id].count === 1) {\n                      delete updatedOrder[id];\n                    } else {\n                      updatedOrder[id].count--;\n                    }\n                  }\n\n                  let nextOrderStatuses = {...orderStatuses};\n\n                  if (Object.keys(nextOrderStatuses).length === 0) {\n                    FOOD_AREAS.forEach(area => {\n                      area.items.forEach(item => {\n                        item.foods.forEach(food => {\n                          if (food.id in order) {\n                            const status = item.id === itemId ? 'ACTIVE' : 'CANCELED';\n\n                            nextOrderStatuses[item.id] = status;\n                          }\n                        });\n                      });\n                    });\n                  }\n\n                  const serialized = JSON.stringify(updatedOrder);\n\n                  localStorage.setItem('orders', serialized);\n                  localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n                  setOrder(updatedOrder);\n                  setOrderStatuses(nextOrderStatuses);\n                }}\n              />\n            );\n          }}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/edit.751f84c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.dfc54362.png\";","module.exports = __webpack_public_path__ + \"static/media/3.dbf82c38.png\";","module.exports = __webpack_public_path__ + \"static/media/2.20489759.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e671d539.png\";","module.exports = __webpack_public_path__ + \"static/media/check-symbol.06277842.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-button.1198ed41.svg\";","module.exports = __webpack_public_path__ + \"static/media/kfc.4fd2ba47.png\";","module.exports = __webpack_public_path__ + \"static/media/burger.35bcd067.png\";","module.exports = __webpack_public_path__ + \"static/media/mcdac.60464810.png\";","module.exports = __webpack_public_path__ + \"static/media/sub.4eb05fdd.png\";"],"sourceRoot":""}